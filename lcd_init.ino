
const static char bmp_bits[8000] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 
  0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x7F, 0x40, 0x15, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x5F, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x7F, 0x00, 0xC9, 
  0xA3, 0x00, 0xFE, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0x03, 0xFE, 0x7F, 0xFE, 0x1F, 0xE0, 0xFF, 0x3F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFF, 0x7F, 0xF0, 0x0B, 0x00, 0x00, 0xF8, 0x03, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x7E, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 
  0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x83, 0xFF, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xE0, 0x3F, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 
  0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x07, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x70, 0xF8, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE3, 0x3F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x8E, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x0E, 0x00, 0x00, 0x00, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x38, 0xFE, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x8F, 0x03, 
  0x00, 0x00, 0x80, 0x0F, 0xE0, 0x01, 0x00, 0x00, 0x60, 0xF8, 0xFF, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0xFF, 0xC3, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x30, 0x03, 0x00, 0x00, 
  0x80, 0xF3, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x31, 0x00, 0x00, 0x00, 0x60, 0x00, 
  0x20, 0x02, 0x00, 0x00, 0x00, 0xC6, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x7F, 0x0C, 0x00, 
  0x00, 0x00, 0x60, 0x00, 0xF0, 0x03, 0x60, 0x00, 0x00, 0x1C, 0xFF, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFE, 0x3F, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0xA0, 0x01, 0x70, 0x00, 
  0x00, 0x30, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFF, 0x8F, 0x01, 0x00, 0x00, 0x00, 0xC0, 0x18, 
  0x30, 0x01, 0x58, 0x00, 0x00, 0xC0, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xC7, 0x00, 0x00, 
  0x01, 0x00, 0x80, 0x0F, 0x10, 0x03, 0x4C, 0x00, 0x00, 0x80, 0xF9, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0x33, 0x00, 0xE0, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x4E, 0x00, 
  0x00, 0x00, 0xE3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x19, 0x00, 0x30, 0x04, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x7A, 0x00, 0x06, 0x00, 0xC4, 0x7F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x04, 0x00, 0x10, 
  0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x3B, 0x00, 0x98, 0x7F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x3F, 0x06, 0x00, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 
  0x21, 0x00, 0x30, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xE0, 0x9F, 0x01, 0x00, 0x20, 0x0C, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x07, 0x00, 0x60, 0xFC, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xCF, 0x00, 0x00, 0x60, 
  0x06, 0x00, 0xE0, 0xFF, 0xFF, 0x01, 0x00, 0x80, 0x0C, 0x00, 0x80, 0xF8, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 
  0x47, 0x00, 0x18, 0x40, 0x03, 0x00, 0x5D, 0x00, 0x00, 0x5E, 0x00, 0xC0, 
  0x00, 0x00, 0x00, 0xF3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF0, 0x33, 0x00, 0x10, 0xC0, 0x01, 0xA0, 0x01, 0x00, 
  0x00, 0xA0, 0x03, 0x40, 0x00, 0x00, 0x00, 0xE6, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x11, 0x00, 0x30, 0x00, 
  0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x20, 0x00, 0xC4, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 
  0x0C, 0x80, 0x63, 0x00, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x60, 0x00, 
  0x00, 0xE0, 0x00, 0x98, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x7C, 0x06, 0x00, 0xDF, 0x00, 0xC0, 0x00, 0x00, 0xA8, 
  0x0E, 0x00, 0x80, 0x03, 0x00, 0xC0, 0x01, 0x90, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x02, 0x00, 0xF3, 0x00, 
  0x38, 0x00, 0x00, 0x07, 0x18, 0x00, 0x00, 0x0C, 0x00, 0x60, 0x03, 0x20, 
  0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 
  0x01, 0x00, 0x06, 0x00, 0x0C, 0x00, 0x80, 0x00, 0x60, 0x00, 0x00, 0x30, 
  0x00, 0x20, 0x00, 0x40, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x80, 0x8F, 0x00, 0x00, 0x04, 0x00, 0x03, 0x00, 0x40, 0x80, 
  0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x80, 0xFC, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xCF, 0x00, 0x00, 0x0C, 0xC0, 
  0x00, 0x00, 0x20, 0xA0, 0x01, 0x03, 0x00, 0x80, 0x01, 0x18, 0x00, 0x80, 
  0xF9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x27, 
  0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x10, 0xA0, 0x00, 0x02, 0x00, 0x00, 
  0x06, 0x08, 0x00, 0x00, 0xFB, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0x33, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xB0, 
  0x00, 0x04, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0xF2, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x13, 0x00, 0x00, 0x00, 0x06, 
  0x00, 0x00, 0x08, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0xE4, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x09, 
  0xC0, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x00, 0x00, 
  0x60, 0x00, 0x80, 0x01, 0xC8, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFF, 0x04, 0x40, 0x1E, 0x00, 0x01, 0x00, 0x00, 0x04, 0x00, 
  0x00, 0x08, 0x00, 0x00, 0xC0, 0x00, 0xC0, 0x03, 0x98, 0x7F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x06, 0x80, 0x38, 0xC0, 0x00, 
  0x00, 0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60, 0x06, 
  0x90, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x02, 
  0x80, 0x0D, 0x60, 0x00, 0x08, 0x04, 0x00, 0xFE, 0x0F, 0x18, 0x18, 0x00, 
  0x00, 0x06, 0xF8, 0x0C, 0x20, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC0, 0x3F, 0x01, 0x80, 0x03, 0x30, 0x00, 0x3E, 0x1F, 0x00, 0xFC, 
  0xFF, 0x00, 0x3C, 0x06, 0x00, 0x04, 0x88, 0x00, 0x60, 0xFF, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3F, 0x01, 0x00, 0x03, 0x08, 0x00, 
  0x36, 0x13, 0x04, 0xFE, 0x8F, 0x00, 0x24, 0x06, 0x00, 0x18, 0x18, 0x00, 
  0x40, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x9F, 0x00, 
  0x00, 0x02, 0x0C, 0x00, 0x18, 0x31, 0x04, 0xFC, 0x8F, 0x18, 0x30, 0x02, 
  0x00, 0x10, 0x30, 0x00, 0xC0, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF0, 0xCF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0C, 0x19, 0x00, 0xFE, 
  0xCF, 0x10, 0x1C, 0x06, 0x00, 0x20, 0x20, 0x00, 0x80, 0xFC, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x4F, 0x00, 0x00, 0x00, 0x03, 0x00, 
  0x3C, 0x1F, 0x04, 0xFC, 0x3F, 0x08, 0x3C, 0x06, 0x00, 0x40, 0x00, 0x00, 
  0x00, 0xF9, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x27, 0x00, 
  0x00, 0x80, 0x01, 0x00, 0x16, 0x04, 0x00, 0xFC, 0x0F, 0x08, 0x34, 0x02, 
  0x00, 0x80, 0x00, 0x00, 0x00, 0xF9, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF0, 0x37, 0x80, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x08, 0xFE, 
  0x0F, 0x08, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xF2, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x13, 0x80, 0x03, 0x40, 0x00, 0x00, 
  0x00, 0x00, 0x10, 0xFC, 0x0F, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 
  0x01, 0xF6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x1B, 0x00, 
  0x0E, 0x20, 0x00, 0x00, 0x00, 0x00, 0x10, 0xFC, 0x07, 0x02, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x60, 0x03, 0xE4, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF0, 0x09, 0x00, 0x1A, 0x10, 0x00, 0x00, 0x00, 0x00, 0x20, 0xF8, 
  0x07, 0x02, 0x00, 0x00, 0x00, 0x00, 0x04, 0x38, 0x02, 0xEC, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x09, 0x00, 0x03, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x40, 0xA0, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x08, 0x0C, 
  0x06, 0xC8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0C, 0x70, 
  0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x18, 0x08, 0x04, 0xC8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF8, 0x04, 0xE0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x18, 0x06, 0x90, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x06, 0x80, 0x03, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x5C, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xB0, 
  0x03, 0x90, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x02, 0x00, 
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x20, 0xE0, 0x01, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x78, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x20, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 
  0x00, 0x60, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01, 0x00, 
  0x80, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x80, 0x00, 0x00, 0x60, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xBE, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x40, 0x2C, 0x00, 0x80, 0x00, 0x00, 0x40, 0x3E, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xBE, 0x00, 0x00, 0x40, 0x00, 0xF0, 0xFF, 
  0xFF, 0x0F, 0xE0, 0xFF, 0xFF, 0xFF, 0x03, 0xF0, 0xFF, 0x01, 0x00, 0x01, 
  0x00, 0x80, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x00, 
  0x40, 0x00, 0xF0, 0xFF, 0xFF, 0x0F, 0xE0, 0xFF, 0xFF, 0xFF, 0x01, 0xFC, 
  0xFF, 0x07, 0x00, 0x02, 0x00, 0x80, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x9F, 0x00, 0x00, 0x40, 0x00, 0xF0, 0xFF, 0xFF, 0x07, 0xF0, 0xFF, 
  0xFF, 0xFF, 0x01, 0x7E, 0xF8, 0x0F, 0x00, 0x02, 0x00, 0x80, 0xFC, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0xDF, 0x00, 0x00, 0x20, 0x00, 0xF0, 0xFF, 
  0xFF, 0x07, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x1F, 0xE0, 0x3F, 0x00, 0x00, 
  0x00, 0x80, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x4F, 0x00, 0x00, 
  0x20, 0x00, 0xF0, 0xFF, 0xFF, 0x03, 0xF0, 0xFF, 0xFF, 0x7F, 0x80, 0x1F, 
  0xC0, 0x3F, 0x00, 0x00, 0x00, 0x80, 0xFD, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xC0, 0x4F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x03, 0xF8, 0xFF, 
  0xFF, 0x7F, 0x80, 0x0F, 0x80, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xF9, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0x6F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 
  0xFF, 0x01, 0xF8, 0xFF, 0xFF, 0x3F, 0xC0, 0x1F, 0x80, 0x7F, 0x00, 0x00, 
  0x00, 0x00, 0xF9, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x2F, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x01, 0xF8, 0xFF, 0xFF, 0x1F, 0xC0, 0x1F, 
  0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFB, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0x27, 0x00, 0x00, 0x00, 0x00, 0x70, 0xF7, 0x9E, 0x00, 0xFC, 0xBE, 
  0xDE, 0x1F, 0xE0, 0x3F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFB, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x27, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 
  0x00, 0x00, 0x0C, 0x00, 0x00, 0x0F, 0xC0, 0x7F, 0x80, 0xFF, 0x00, 0x00, 
  0x00, 0x00, 0xF2, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x27, 0x00, 0x00, 
  0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x7F, 
  0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0x17, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x07, 0xE0, 0x7F, 0x80, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x33, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0xC0, 0x7F, 0x80, 0xFF, 0x00, 0x00, 
  0x00, 0x00, 0xF2, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x17, 0x00, 0x00, 
  0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0xC0, 0x7F, 
  0x80, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0x13, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0x01, 0xC0, 0x3F, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x3F, 0xC0, 0x3F, 0x00, 0x00, 
  0x00, 0x00, 0xE4, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x13, 0x00, 0x00, 
  0x00, 0x00, 0x70, 0x20, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x06, 
  0xC0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0x13, 0x00, 0x00, 0x00, 0x00, 0x70, 0xFC, 0x1F, 0x00, 0x00, 0x00, 
  0x7C, 0x00, 0x00, 0x00, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x1B, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0xE4, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x19, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 
  0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0xEC, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xFF, 0x03, 0x00, 0x00, 
  0x1F, 0x00, 0x00, 0x80, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFE, 0x07, 0x00, 0x80, 0x1F, 0x00, 0x00, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0xEC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0B, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0xC0, 0x1F, 0x00, 0x00, 0x00, 
  0xFC, 0x3F, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0xC0, 
  0x0F, 0x00, 0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xEC, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0x1F, 0x00, 0xE0, 0x0F, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0x00, 0x00, 
  0x00, 0x00, 0xE8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0B, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x1F, 0x00, 0xF0, 0x07, 0x00, 0x00, 0x00, 
  0x80, 0xFF, 0x01, 0x00, 0x00, 0x00, 0xE4, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xC0, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3F, 0x00, 0xF0, 
  0x0F, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x01, 0x00, 0x00, 0x00, 0xE8, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xC0, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
  0xE0, 0x3F, 0x00, 0xF8, 0x07, 0x00, 0x00, 0x01, 0x00, 0xFF, 0x03, 0x00, 
  0x00, 0x00, 0xE4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0B, 0x00, 0x00, 
  0x00, 0x00, 0xF8, 0x01, 0xE0, 0x3F, 0x00, 0xF8, 0x07, 0x00, 0xC0, 0x0F, 
  0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xEC, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0x09, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x03, 0xE0, 0x3F, 0x00, 0xF8, 
  0x07, 0x00, 0xE0, 0x1F, 0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0xE8, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0x0B, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x03, 
  0xE0, 0x3F, 0x00, 0xFC, 0x07, 0x00, 0xE0, 0x1F, 0x00, 0xFE, 0x03, 0x00, 
  0x00, 0x00, 0xEC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1B, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0x07, 0xE0, 0x3F, 0x00, 0xFC, 0x07, 0x00, 0xF0, 0x1F, 
  0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0x19, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xE0, 0x3F, 0x00, 0xFC, 
  0x07, 0x00, 0xF0, 0x3F, 0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0xEC, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0x0B, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 
  0xE0, 0x3F, 0x00, 0xFC, 0x07, 0x00, 0xF0, 0x3F, 0x00, 0xFE, 0x03, 0x00, 
  0x00, 0x00, 0xE4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1B, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0x03, 0xE0, 0x3F, 0x00, 0xFC, 0x07, 0x00, 0xF0, 0x1F, 
  0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0xE4, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0x13, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x03, 0xF0, 0x1F, 0x00, 0xFE, 
  0x03, 0x00, 0xF0, 0x0F, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xEC, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x1B, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x01, 
  0xF0, 0x1F, 0x00, 0xFE, 0x07, 0x00, 0xF0, 0x07, 0x00, 0xFF, 0x01, 0x00, 
  0x00, 0x00, 0xE4, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x13, 0x00, 0x00, 
  0x00, 0x00, 0xFC, 0x00, 0xF0, 0x0F, 0x00, 0xFE, 0x03, 0x00, 0xE0, 0x07, 
  0x00, 0xFF, 0x01, 0x00, 0x00, 0x00, 0xF4, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0x13, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0xF8, 0x0F, 0x00, 0xFE, 
  0x07, 0x00, 0xE0, 0x03, 0x80, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x17, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 
  0xF8, 0x07, 0x00, 0xFE, 0x03, 0x00, 0xC0, 0x07, 0xC0, 0x7F, 0x00, 0x00, 
  0x00, 0x00, 0xF6, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x17, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0x01, 0xFC, 0x03, 0x00, 0xFE, 0x03, 0x00, 0xC0, 0x0F, 
  0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0x33, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x87, 0xFF, 0x01, 0x00, 0xFC, 
  0x03, 0x00, 0x00, 0x1F, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x27, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 
  0x7F, 0x00, 0x00, 0xFC, 0x03, 0x00, 0x00, 0xFE, 0xFF, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0xF6, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x37, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFF, 0x1F, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0xF8, 
  0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x07, 0x00, 0x00, 0xF0, 
  0x00, 0x00, 0x00, 0xC0, 0x3F, 0x00, 0x00, 0x08, 0x00, 0x00, 0xF2, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
  0x00, 0x00, 0xFB, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x6F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xFB, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xF9, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 
  0x01, 0x7C, 0xC0, 0x3F, 0xF8, 0x03, 0x7F, 0xE0, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x4F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF8, 0x03, 0xFF, 0x80, 0x3F, 0xF0, 0x07, 0xFF, 0xE0, 
  0x1F, 0x00, 0x00, 0x02, 0x00, 0x80, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xC0, 0xDF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBC, 0x07, 0xEF, 0xC1, 0x3F, 
  0xF8, 0x03, 0x7F, 0xE0, 0x1F, 0x00, 0x00, 0x02, 0x00, 0x80, 0xFC, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 
  0x03, 0xE7, 0x80, 0x03, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x01, 
  0x00, 0x80, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3C, 0x07, 0xE7, 0x81, 0x03, 0x78, 0x00, 0x07, 0xE0, 
  0x00, 0x00, 0x00, 0x01, 0x00, 0x80, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xBF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC7, 0x81, 0x03, 
  0x38, 0x00, 0x07, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3E, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x3C, 
  0x00, 0xE7, 0x81, 0x03, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x80, 0x00, 
  0x00, 0x40, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x1C, 0x00, 0xE7, 0x81, 0x03, 0x78, 0x00, 0x07, 0xE0, 
  0x01, 0x00, 0x80, 0x00, 0x00, 0x60, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x7C, 0x03, 0x00, 0x00, 0x01, 0x00, 0x1C, 0x00, 0xE7, 0x81, 0x03, 
  0x78, 0x01, 0x3F, 0xE0, 0x07, 0x00, 0x40, 0x00, 0x00, 0x20, 0x1F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0x01, 0x00, 0x1C, 
  0x00, 0xC7, 0xC0, 0x1F, 0xF0, 0x01, 0x3F, 0xE0, 0x07, 0x00, 0x00, 0x00, 
  0x00, 0xA0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x02, 0x00, 
  0x00, 0x02, 0x00, 0x1C, 0x00, 0xC7, 0xC1, 0x1F, 0xF8, 0x03, 0x3F, 0xE0, 
  0x07, 0x00, 0x20, 0x00, 0x00, 0xB0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF0, 0x06, 0x00, 0x00, 0x02, 0x00, 0x1C, 0x00, 0xE7, 0x81, 0x1F, 
  0xF8, 0x01, 0x07, 0xE0, 0x01, 0x00, 0x10, 0x00, 0x00, 0x90, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x04, 0x00, 0x00, 0x04, 0x00, 0x1C, 
  0x00, 0xE7, 0x80, 0x03, 0x78, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xD8, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0D, 0x00, 
  0x00, 0x0C, 0x00, 0x1C, 0x00, 0xC7, 0x81, 0x03, 0x38, 0x00, 0x07, 0xE0, 
  0x00, 0x00, 0x08, 0x00, 0x00, 0xC8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF0, 0x09, 0x00, 0x00, 0x18, 0x00, 0x1C, 0x00, 0xE7, 0x81, 0x03, 
  0x78, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x04, 0x00, 0x00, 0xC8, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x19, 0x00, 0x00, 0x10, 0x00, 0x1C, 
  0x01, 0xE7, 0xC0, 0x03, 0x38, 0x00, 0x07, 0xE0, 0x01, 0x00, 0x02, 0x00, 
  0x00, 0xEC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x13, 0x00, 
  0x00, 0x20, 0x00, 0xBC, 0x07, 0xC7, 0xC1, 0x03, 0x78, 0x00, 0x07, 0xE0, 
  0x00, 0x00, 0x02, 0x00, 0x00, 0xE6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xE0, 0x37, 0x00, 0x00, 0x60, 0x00, 0x1C, 0x07, 0xE7, 0x81, 0x03, 
  0x30, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x01, 0x00, 0x00, 0xF2, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x27, 0x00, 0x00, 0x40, 0x00, 0xFC, 
  0x07, 0xFF, 0xC0, 0x03, 0x78, 0x00, 0x7F, 0xE0, 0x0F, 0x80, 0x00, 0x00, 
  0x00, 0xF2, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x6F, 0x00, 
  0x00, 0x80, 0x00, 0xF8, 0x03, 0xFE, 0x80, 0x03, 0x38, 0x00, 0x7F, 0xE0, 
  0x1F, 0x40, 0x00, 0x00, 0x00, 0xF9, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xE0, 0x4F, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x01, 0x7E, 0x80, 0x03, 
  0x38, 0x00, 0xFF, 0xE0, 0x1F, 0x00, 0x00, 0x02, 0x82, 0xFD, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x9F, 0x00, 0x00, 0x00, 0x03, 0x40, 
  0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x0C, 
  0x81, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x9F, 0x01, 
  0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x10, 0x00, 0x98, 0xC0, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xE0, 0x3F, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0xF0, 0x40, 0xFE, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x03, 0x00, 0x00, 0x18, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x40, 
  0x20, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x02, 
  0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 0xB0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0xFF, 0x04, 0x00, 0x1C, 0x40, 0x00, 0x00, 0x24, 0x60, 0x20, 
  0x04, 0x01, 0x02, 0x00, 0x80, 0x01, 0x00, 0x00, 0x98, 0xFF, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0D, 0x00, 0x0E, 0xC0, 0x00, 
  0x00, 0xC6, 0xF0, 0x61, 0x84, 0x8F, 0x1F, 0x00, 0x40, 0x00, 0x00, 0x00, 
  0xC8, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x09, 
  0x00, 0x0B, 0x00, 0x03, 0x00, 0x46, 0x98, 0x21, 0xC6, 0x84, 0x01, 0x00, 
  0x20, 0x00, 0x00, 0x00, 0xE4, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0x13, 0x80, 0x0D, 0x00, 0x06, 0x00, 0xFE, 0x0C, 0x63, 
  0xC6, 0x83, 0x07, 0x00, 0x18, 0x00, 0x02, 0x00, 0xE6, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x27, 0xC0, 0xC4, 0x00, 0x1C, 
  0x00, 0x7E, 0x0C, 0x63, 0x86, 0x0F, 0x07, 0x00, 0x0C, 0x00, 0x06, 0x00, 
  0xF2, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x67, 
  0x00, 0xFE, 0x01, 0x30, 0x00, 0x46, 0x98, 0x63, 0x86, 0x8C, 0x01, 0x00, 
  0x02, 0x00, 0x0C, 0x03, 0xFB, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xE0, 0xCF, 0x00, 0x4E, 0x00, 0xC0, 0x00, 0xC6, 0xF8, 0xE1, 
  0xC7, 0x8F, 0x1F, 0x80, 0x01, 0x00, 0x90, 0x81, 0xFC, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x9F, 0x00, 0x60, 0x00, 0x80, 
  0x01, 0x64, 0x60, 0x80, 0x01, 0x86, 0x1B, 0x60, 0x00, 0x00, 0xE0, 0xC0, 
  0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 
  0x01, 0x10, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 
  0x00, 0x00, 0x60, 0x60, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x7F, 0x06, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x20, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x04, 0x00, 0x00, 0x00, 
  0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x18, 0x00, 0x98, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 
  0x0C, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
  0x00, 0x10, 0x00, 0xC8, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF0, 0x19, 0x00, 0x80, 0x03, 0x00, 0x1E, 0x00, 0x00, 
  0x00, 0x00, 0x1C, 0x00, 0x00, 0x30, 0x00, 0xE6, 0x07, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x27, 0x00, 0xE0, 0x03, 
  0x00, 0xE0, 0x00, 0x00, 0x00, 0xA0, 0x03, 0x00, 0x00, 0x60, 0x00, 0xF2, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 
  0x67, 0x00, 0x30, 0x01, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x7D, 0x00, 0x00, 
  0x18, 0x40, 0x00, 0xF9, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x8F, 0x01, 0x3C, 0x03, 0x00, 0x00, 0xA0, 0xEF, 
  0xFD, 0x02, 0x00, 0x00, 0x10, 0x00, 0xC0, 0xFC, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x01, 0xC0, 0x01, 
  0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x20, 0x00, 0x60, 0xFE, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x7F, 0x06, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x30, 0x00, 0x30, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFF, 0x0C, 0x00, 0x01, 0x3C, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x7D, 0x00, 0x98, 0xFF, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x19, 0x00, 0x00, 
  0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0xCC, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFE, 0x33, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x43, 0x00, 0xE3, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFE, 0xCF, 0x00, 0x00, 0x7E, 0x80, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x02, 0xC0, 0xF9, 0x3F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x9F, 0x03, 0x00, 
  0x1B, 0x80, 0x07, 0x00, 0x00, 0x30, 0x00, 0x00, 0x02, 0x60, 0xFC, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0x3F, 0x06, 0x00, 0x11, 0xC0, 0x08, 0x10, 0x00, 0x0F, 0x00, 0x00, 
  0x00, 0x30, 0xFE, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0C, 0x00, 0x10, 0xC0, 0x08, 0x10, 
  0x00, 0x03, 0x00, 0x00, 0x00, 0x9C, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x31, 0x00, 
  0x10, 0xC0, 0x0F, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 0xC7, 0xFF, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xC0, 0xFF, 0xE7, 0x00, 0x00, 0x40, 0x0C, 0x30, 0x00, 0x1E, 0x00, 0x00, 
  0xC0, 0xF1, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x8F, 0x03, 0x00, 0x60, 0x08, 0x10, 
  0x00, 0x02, 0x00, 0x00, 0x60, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x3F, 0x0E, 
  0x00, 0xE0, 0x0F, 0x10, 0x00, 0x22, 0x00, 0x00, 0x38, 0xFE, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFF, 0x38, 0x00, 0x00, 0x04, 0x30, 0x00, 0x3E, 0x00, 0x00, 
  0x8F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE3, 0x01, 0x00, 0x00, 0xF0, 
  0x01, 0x08, 0x00, 0xC0, 0xE1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x8F, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xF8, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0x3F, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 
  0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xE1, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0xD0, 0xC1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 
  0x07, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0xFF, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFF, 0x7F, 0xE0, 0x1B, 0x00, 0x00, 0xF8, 0x01, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0xFE, 0xFF, 
  0xFF, 0x1F, 0xF0, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 
  0xFF, 0xBF, 0x00, 0xA6, 0x16, 0x80, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x17, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFE, 0xAF, 0xFF, 0xFF, 0xFF, 0xFF, 0x41, 0x04, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 
  0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xE0, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };

#include <digitalWriteFast.h>

//--------------------------------------------//
//---SED1335F Controller on 320 x 200 GLCD ---//
//--Seiko G321DX5R1AC Script for 8080 Config--//
//---LCD Wiring To Pins ----- G321D PinOut----//
//--------------------------------------------//
const int LCD_RES = 16;  // LCD Pin  1 /RES
const int LCD_RD  = 18;  // LCD Pin  2 /RD
const int LCD_WR  = 17;  // LCD Pin  3 /WR
// LCD Pin 4,5 to ground for 8080 config.
const int LCD_CS  = 14;  // LCD Pin  6 /CS
const int LCD_A0  = 15;  // LCD Pin  7 A0
const int LCD_DB0 = 8 ;  // LCD Pin  8 DB0
const int LCD_DB1 = 9 ;  // LCD Pin  9 DB1
const int LCD_DB2 = 10;  // LCD Pin 10 DB2
const int LCD_DB3 = 11;  // LCD Pin 11 DB3
const int LCD_DB4 = 4 ;  // LCD Pin 12 DB4
const int LCD_DB5 = 5 ;  // LCD Pin 13 DB5
const int LCD_DB6 = 6 ;  // LCD Pin 14 DB6
const int LCD_DB7 = 7 ;  // LCD Pin 15 DB7
// LCD Pin 16 to 5Vdc
// LCD Pin 17 to Ground
// LCD Pin 18 to potentiometer between 17 and 19
// LCD Pin 19 to +- -22Vdc
// LCD Pin 20 to Ground

//-------------------------------------------------------------------------------//
// LCD Commands (SetCommand) LCD :    // A0 CS WR RD RES -----------------------//
//-------------------------------------------------------------------------------//
const uint8_t LCDreset   =    0x00;    // 0  0  0  0  0    Reset the Display
const uint8_t LCDnop     =    0x17;    // 1  0  1  1  1    No operation
const uint8_t CmdSetup   =    0x17;    // 1  0  1  1  1    Set A0 high
const uint8_t CmdWrite   =    0x13;    // 1  0  0  1  1    Set WR low
const uint8_t DataSetup  =    0x07;    // 0  0  1  1  1    Set A0 low
const uint8_t DataWrite  =    0x03;    // 0  0  0  1  1    Set WR low
const uint8_t StatusRead =    0x05;    // 0  0  1  0  1    Set RD low, A0 low
const uint8_t DataRead   =    0x15;    // 1  0  1  0  1    Set RD low, A0 high

//-------------------------------------------------------------------------------//
// LCD Commands (DataPort)  LCD  :     // 7  6  5  4  3  2  1  0 ----------------//
//-------------------------------------------------------------------------------//
const uint8_t SystemSet  =    0x40;    // 0  1  0  0  0  0  0  0  Initialize system
const uint8_t SleepIn    =    0x53;    // 0  1  0  1  0  0  1  1  Enter standby mode
const uint8_t DispOFF    =    0x58;    // 0  1  0  1  1  0  0  0  Display Off
const uint8_t DispON     =    0x59;    // 0  1  0  1  1  0  0  1  Display On
const uint8_t Scroll     =    0x44;    // 0  1  0  0  0  1  0  0  Initialize Address & Regions
const uint8_t CSRForm    =    0x5D;    // 0  1  0  1  1  1  0  1  Set cursor type
const uint8_t CharAddr   =    0x5C;    // 0  1  0  1  1  1  0  0  Set address of character RAM
const uint8_t CSRRight   =    0x4C;    // 0  1  0  0  1  1  0  0  Cursor direction = right
const uint8_t CSRLeft    =    0x4D;    // 0  1  0  0  1  1  0  1  Cursor direction = left
const uint8_t CSRUp      =    0x4E;    // 0  1  0  0  1  1  1  0  Cursor direction = up
const uint8_t CSRDown    =    0x4F;    // 0  1  0  0  1  1  1  1  Cursor direction = down
const uint8_t HorzScroll =    0x5A;    // 0  1  0  1  1  0  1  0  Set horz scroll position
const uint8_t Overlay    =    0x5B;    // 0  1  0  1  1  0  1  1  Set Display Format
const uint8_t CSRW       =    0x46;    // 0  1  0  0  0  1  1  0  Set cursor address
const uint8_t CSRR       =    0x47;    // 0  1  0  0  0  1  1  1  Read cursor address
const uint8_t MWRITE     =    0x42;    // 0  1  0  0  0  0  1  0  Write to display memory
const uint8_t MREAD      =    0x43;    // 0  1  0  0  0  0  1  1  Read from display memory

//------------------------------------------------//
//--------------- Global Variables ---------------//
//------------------------------------------------//
unsigned char pixelbuffer;    // Hold Pixel read
unsigned char strbuffer[10];  // Hold String to write
uint8_t currentCommand;       // Hold last command to avoid rewrite
uint8_t currentData;          // Hold last data value to avoid rewrite
uint8_t currentReverseData;   // Hold last reverse data to avoid rewrite

//------------------------------------------------//
//---------- Set Command Pins to Output ----------//
//------------------------------------------------//
void InitializeCommandPins() {
  pinModeFast(LCD_RES, OUTPUT);
  pinModeFast(LCD_WR,  OUTPUT);
  pinModeFast(LCD_CS,  OUTPUT);
  pinModeFast(LCD_A0,  OUTPUT);
  pinModeFast(LCD_RD,  OUTPUT);
} // End InitializeCommandPins()

//------------------------------------------------//
//--------- Switch to read or write data ---------//
//------------------------------------------------//
void SetDataPortDirection(unsigned char Data) {
  pinModeFast(LCD_DB0, (Data >> 0) & 0x01);
  pinModeFast(LCD_DB1, (Data >> 1) & 0x01);
  pinModeFast(LCD_DB2, (Data >> 2) & 0x01);
  pinModeFast(LCD_DB3, (Data >> 3) & 0x01);
  pinModeFast(LCD_DB4, (Data >> 4) & 0x01);
  pinModeFast(LCD_DB5, (Data >> 5) & 0x01);
  pinModeFast(LCD_DB6, (Data >> 6) & 0x01);
  pinModeFast(LCD_DB7, (Data >> 7) & 0x01);
} //End SetDataPortDirection()

//------------------------------------------------//
//------------ Write data to DB0 - DB7 -----------//
//------------------------------------------------//
void WriteDataPort(unsigned char Data) {
  if (Data == currentData) {
    // skip
  } else {
    currentData = Data;
    digitalWriteFast(LCD_DB0, (Data >> 0) & 0x01);
    digitalWriteFast(LCD_DB1, (Data >> 1) & 0x01);
    digitalWriteFast(LCD_DB2, (Data >> 2) & 0x01);
    digitalWriteFast(LCD_DB3, (Data >> 3) & 0x01);
    digitalWriteFast(LCD_DB4, (Data >> 4) & 0x01);
    digitalWriteFast(LCD_DB5, (Data >> 5) & 0x01);
    digitalWriteFast(LCD_DB6, (Data >> 6) & 0x01);
    digitalWriteFast(LCD_DB7, (Data >> 7) & 0x01);
  }
} // End WriteDataPort()

//------------------------------------------------//
//----------- Read data from DB0 - DB7 -----------//
//------------------------------------------------//
uint8_t ReadDataPort() {
  uint8_t inputByte = B00000000;
  byte pins[8] = {
    LCD_DB0,
    LCD_DB1,
    LCD_DB2,
    LCD_DB3,
    LCD_DB4,
    LCD_DB5,
    LCD_DB6,
    LCD_DB7
  };
  for (int i = 0; i < 8; i++)
  {
    if (digitalReadFast(pins[i]) == 1) {
      inputByte |= (1 << i);
    }
  }
  return inputByte;
} // End ReadDataPort()

//------------------------------------------------//
//----------- Set Command Port Option ------------//
//------------------------------------------------//
void SetCommand(unsigned char Data) {
  if (Data == currentCommand) {
    // skip
  } else {
    currentCommand = Data;
    digitalWriteFast(LCD_RES, (Data >> 0) & 0x01);
    digitalWriteFast(LCD_RD,  (Data >> 1) & 0x01);
    digitalWriteFast(LCD_WR,  (Data >> 2) & 0x01);
    digitalWriteFast(LCD_CS,  (Data >> 3) & 0x01);
    digitalWriteFast(LCD_A0,  (Data >> 4) & 0x01);
  }
} // End SetCommand()


void WriteCommand(unsigned char CommandCode) {
  WriteDataPort(CommandCode);
  SetCommand(CmdSetup);
  SetCommand(CmdWrite);
  SetCommand(CmdSetup);
} // end WriteCommand

void WriteData(unsigned char CommandCode) {
  WriteDataPort(CommandCode);
  SetCommand(DataSetup);
  SetCommand(DataWrite);
  SetCommand(DataSetup);
} // end WriteData

//*************************************************************

// lcdinit() initializes LCD

void lcdinit(void) {

  SetDataPortDirection(0xff);

  SetCommand(LCDnop);    //issues nothing to the LCD for about 6 ms.
  delay(2);

  SetCommand(LCDreset);
  delay(2);

  SetCommand(LCDnop);
  delay(2);

  WriteCommand(SystemSet);     //Set LCD system
  WriteData(0x30);
  WriteData(0x87);
  WriteData(0x07);
  WriteData(0x27);
  WriteData(0x2F);
  WriteData(0xC7);
  WriteData(0x28);
  WriteData(0x00);

  WriteCommand(Overlay);
  WriteData(0x01);

  WriteCommand(Scroll);
  WriteData(0x00);
  WriteData(0x00);
  WriteData(0xC7);
  WriteData(0xE8);
  WriteData(0x03);
  WriteData(0xC7);

  WriteCommand(CSRForm);
  WriteData(0x04);
  WriteData(0x86);

  WriteCommand(CSRRight);

  WriteCommand(HorzScroll);
  WriteData(0x00);

  WriteCommand(DispOFF);
  WriteData(0x17);

  clearLCD();                    //completely clears LCD

  WriteCommand(DispON);

} // end lcdinit

void WriteString(unsigned char *input) {

  char i = 0;
  WriteCommand(MWRITE);
  while (input[i] != 0) {
    WriteData(input[i]);
    i++;
  }
} // end WriteString

void initialize(void) {

  InitializeCommandPins();
  lcdinit();
}

void clearLCD(void) {

  unsigned short i;
  MoveCursor(0);   //set cursor to the beginning of the character layer
  WriteCommand(MWRITE);
  for (i = 0; i < 1000; i++) {
    WriteData(0x20);    // write " " to character memory
  }

  MoveCursor(1000);   //set cursor to the beginning of the graphics layer
  WriteCommand(MWRITE);
  for (i = 0; i < 8000; i++) {
    WriteData(0x00);    // erase graphics memory
  }

} // end clearLCD


//*************************************************************
// DrawXY(x,y) turn on pixel at (x,y) in graphic layer
void DrawXY(int x,int y) {

int address;
address = 1000 + y*40 + (int)(x/8);      //graphics starting address is 1000

MoveCursor(address);                      //since each horizontal lines takes up 40 bytes,
                                          //we should add y*40 to the base address
                                          //then we add x/8 to the address to do the horizontal offset
WriteCommand(MREAD);                      //Set LCD to be ready to be read
SetDataPortDirection(0x00);               //set PORTD to be inputs

WriteDataPort(0x00);                      //turn off all pull ups
SetCommand(DataRead);                    //send to LCD to do a data read
delay(10);                                //wait some time for everything to set(if this delay is too short, flickering increases)
pixelbuffer = ReadDataPort();             //read in the old data
SetCommand(LCDnop);                      //signal the LCD to stop reading
delay(2);                                 //wait for LCD to stop and set PORTD back to outputs
SetDataPortDirection(0xFF);

pixelbuffer = pixelbuffer ^ (0x80>>(x%8));//OR pixelbuffer with the byte you want to write, 0x80>>(x%8) is where we want to illuminate in that byte

MoveCursor(address);                      //set the cursor back to where we were going to write to
WriteCommand(MWRITE);
WriteData(pixelbuffer);                   //write the pixel buffer which contained old and new pixel information

}

//*************************************************************
// MoveCursor(addr) moves cursor to specified address
void MoveCursor(int addr) {

  WriteCommand(CSRW);
  WriteData(addr);
  WriteData(addr >> 8);
}

void DrawXBM(bool invert) {
  static char pixel;
  MoveCursor(1000); 
  WriteCommand(MWRITE);
  for (int x = 0; x < 8000; x++) {
    pixel = (char*)pgm_read_word(&(bmp_bits[x]));
    if (!invert){
      WriteXbmData(pixel);
    } else {
      WriteXbmData(~pixel);
    }
  }
}

//------------------------------------------------//
//----- Write Reversed data to DB0 - DB7 ---------//
//------------------------------------------------//
void WriteDataPortReverse(unsigned char Data) {
  if (Data == currentReverseData) {
    // skip
  } else {
    currentReverseData = Data;
    digitalWriteFast(LCD_DB0, (Data >> 7) & 0x01);
    digitalWriteFast(LCD_DB1, (Data >> 6) & 0x01);
    digitalWriteFast(LCD_DB2, (Data >> 5) & 0x01);
    digitalWriteFast(LCD_DB3, (Data >> 4) & 0x01);
    digitalWriteFast(LCD_DB4, (Data >> 3) & 0x01);
    digitalWriteFast(LCD_DB5, (Data >> 2) & 0x01);
    digitalWriteFast(LCD_DB6, (Data >> 1) & 0x01);
    digitalWriteFast(LCD_DB7, (Data >> 0) & 0x01);
  }
} // End WriteDataPort()

void WriteXbmData(unsigned char CommandCode) {
  WriteDataPortReverse(CommandCode);
  SetCommand(DataSetup);
  SetCommand(DataWrite);
  SetCommand(DataSetup);
} // end WriteData
/*
unsigned char reverse_bits(unsigned char num) {
  unsigned char reversed = 0;
  for(int i=0;i<8;i++) {
    reversed |= (((num & (1<<i))?1:0) << (7-i));
  }
  return reversed;
}*/

unsigned char temp[5];
void setup() {
  initialize();
  //DrawGB();
  //delay(10000);
  //clearLCD();  
}

void loop() {
  
  int startMillis = millis();
  DrawXBM(false);
  int runtime = (millis())-startMillis;
  MoveCursor(1);
  WriteString("Took ");
  sprintf(temp, "%d", runtime);
  WriteString((unsigned char*)temp);
  WriteString(" milliseconds to draw.");
  DrawXY(0,0);
  DrawXY(319,0);
  DrawXY(319,199);
  DrawXY(0,199);
  delay(1000);
  startMillis = millis();
  DrawXBM(true);
  runtime = (millis())-startMillis;
  MoveCursor(6);
  sprintf(temp, "%d", runtime);
  WriteString((unsigned char*)temp);
  DrawXY(0,0);
  DrawXY(319,0);
  DrawXY(319,199);
  DrawXY(0,199);
  delay(1000);

}


//*************************************************************

// DrawGB() draws out our basic gameboard on LCD



void DrawGB(void) {
  unsigned char i, j;
  int address;
  // Draw Game Board (Graphics)
  address = 1000 + 40 * 8 + 2;
  // draw vertical line for left boxes
  for (i = 0; i < 191; i++) {
    MoveCursor(address);
    WriteCommand(MWRITE);
    WriteData(0x02);
    address = address + 40;
  }
  address = 1000 + 40 * 8 + 20;
  // draw vertical line for right boxes
  for (i = 0; i < 191; i++) {
    MoveCursor(address);
    WriteCommand(MWRITE);
    WriteData(0x02);
    address = address + 40;
  }
  address = 1000 + 24;

  // draw vertical line for right border
  for (i = 0; i < 200; i++) {
    MoveCursor(address);
    WriteCommand(MWRITE);
    WriteData(0x80);
    address = address + 40;
  }
  address = 1000 + 40 * 8 + 4;

  // draw vertical line for top boxes
  for (i = 0; i < 23; i++) {
    MoveCursor(address);
    WriteCommand(MWRITE);
    for (j = 0; j < 8; j++) {
      // one pixel thick line
      WriteData(0x02);
      WriteData(0x00);
    }
    address = address + 40;
  }
  address = 1000 + 40 * 176 + 4;

  // draw vertical line for bottom boxes
  for (i = 0; i < 23; i++) {
    MoveCursor(address);
    WriteCommand(MWRITE);
    for (j = 0; j < 8; j++) {
      // one pixel thick line
      WriteData(0x02);
      WriteData(0x00);
    }
    address = address + 40;
  }
  address = 1000 + 40 * 7;         // 8 pixels down
  MoveCursor(address);
  WriteCommand(MWRITE);

  // draw line across
  for (i = 0; i < 24; i++) {
    WriteData(0xff);
  }
  address = 1000 + 40 * 31;                   // 32 pixels down
  MoveCursor(address);
  WriteCommand(MWRITE);

  // draw line across
  for (i = 0; i < 24; i++) {
    WriteData(0xff);
  }
  address = 1000 + 40 * 175;                 // 176 pixels down
  MoveCursor(address);
  WriteCommand(MWRITE);

  // draw line across
  for (i = 0; i < 24; i++) {
    WriteData(0xff);
  }
  address = 1000 + 40 * 47;

  // draw horizontal line for left boxes
  for (i = 0; i < 8; i++) {
    MoveCursor(address);
    WriteCommand(MWRITE);
    // 22 pixels across
    WriteData(0xff);
    WriteData(0xff);
    WriteData(0xfe);
    // move cursor to next box
    address = address + (40 * 16);
  }
  address = 1000 + 40 * 47 + 20;

  // draw horizontal line for right boxes
  for (i = 0; i < 8; i++) {
    MoveCursor(address);
    WriteCommand(MWRITE);
    // 25 pixels across
    WriteData(0x03);
    WriteData(0xff);
    WriteData(0xff);
    WriteData(0xff);
    // move cursor to next box
    address = address + (40 * 16);
  }

  // Draw Game Board (Text)
  MoveCursor(5);
  //strcpy_P(strbuffer, "CORNELL ");
  WriteString("CORNELL ");
  //strcpy_P(strbuffer, "MONOPOLY");
  WriteString("MONOPOLY");
  // Top boxes
  MoveCursor(62);
  WriteCommand(MWRITE);
  WriteData('G');
  WriteData('O');
  MoveCursor(83); /*
  strcpy_P(strbuffer, "MG??MLGSTCKR");
  WriteString(strbuffer);
  strcpy_P(strbuffer, "OLWPUL TO");
  WriteString(strbuffer);
  MoveCursor(121);
  strcpy_P(strbuffer, "FP22  22242026");
  WriteString(strbuffer);
  strcpy_P(strbuffer, "261528 JA");
  WriteString(strbuffer);
  // Bottom boxes
  MoveCursor(881);
  WriteCommand(MWRITE);
  WriteData('J');
  WriteData('A');
  MoveCursor(923);
  strcpy_P(strbuffer, "BNBY??LNTC$?");
  WriteString(strbuffer);
  strcpy_P(strbuffer, "HNCEBT");
  WriteString(strbuffer);
  WriteData(0x7f);
  WriteData('P');
  WriteData('D');
  MoveCursor(963);
  strcpy_P(strbuffer, "1210  1020%?");
  WriteString(strbuffer);
  strcpy_P(strbuffer, " 6=D 6$20");
  WriteString(strbuffer);*/
  // Left boxes
  MoveCursor(160);
  WriteCommand(MWRITE);
  WriteData('R');
  WriteData('F');
  MoveCursor(200);
  WriteCommand(MWRITE);
  WriteData('2');
  WriteData('0');
  MoveCursor(240);
  WriteCommand(MWRITE);
  WriteData('C');
  WriteData('L');
  MoveCursor(280);
  WriteCommand(MWRITE);
  WriteData('1');
  WriteData('8');
  MoveCursor(320);
  WriteCommand(MWRITE);
  WriteData('C');
  WriteData('E');
  MoveCursor(360);
  WriteCommand(MWRITE);
  WriteData('=');
  WriteData('D');
  MoveCursor(400);
  WriteCommand(MWRITE);
  WriteData('B');
  WriteData('R');
  MoveCursor(440);
  WriteCommand(MWRITE);
  WriteData('1');
  WriteData('8');
  MoveCursor(480);
  WriteCommand(MWRITE);
  WriteData('T');
  WriteData('C');
  MoveCursor(520);
  WriteCommand(MWRITE);
  WriteData('2');
  WriteData('0');
  MoveCursor(560);
  WriteCommand(MWRITE);
  WriteData('B');
  WriteData('B');
  MoveCursor(600);
  WriteCommand(MWRITE);
  WriteData('1');
  WriteData('6');
  MoveCursor(640);
  WriteCommand(MWRITE);
  WriteData('D');
  WriteData('C');
  MoveCursor(680);
  WriteCommand(MWRITE);
  WriteData('1');
  WriteData('4');
  MoveCursor(720);
  WriteCommand(MWRITE);
  WriteData('C');
  WriteData('I');
  WriteData('T');
  MoveCursor(760);
  WriteCommand(MWRITE);
  WriteData('1');
  WriteData('5');
  MoveCursor(800);
  WriteCommand(MWRITE);
  WriteData('S');
  WriteData('M');
  MoveCursor(840);
  WriteCommand(MWRITE);
  WriteData('1');
  WriteData('4');
  // Right boxes
  MoveCursor(182);
  WriteCommand(MWRITE);
  WriteData('H');
  WriteData('O');
  MoveCursor(222);
  WriteCommand(MWRITE);
  WriteData('3');
  WriteData('0');
  MoveCursor(262);
  WriteCommand(MWRITE);
  WriteData('O');
  WriteData('P');
  MoveCursor(302);
  WriteCommand(MWRITE);
  WriteData('3');
  WriteData('0');
  MoveCursor(342);
  WriteCommand(MWRITE);
  WriteData('C');
  WriteData('E');
  MoveCursor(382);
  WriteCommand(MWRITE);
  WriteData('=');
  WriteData('D');
  MoveCursor(422);
  WriteCommand(MWRITE);
  WriteData('P');
  WriteData('H');
  MoveCursor(462);
  WriteCommand(MWRITE);
  WriteData('3');
  WriteData('2');
  MoveCursor(502);
  WriteCommand(MWRITE);
  WriteData('T');
  WriteData('C');
  MoveCursor(542);
  WriteCommand(MWRITE);
  WriteData('2');
  WriteData('0');
  MoveCursor(582);
  WriteCommand(MWRITE);
  WriteData('?');
  MoveCursor(622);
  WriteCommand(MWRITE);
  WriteData('?');
  MoveCursor(662);
  WriteCommand(MWRITE);
  WriteData('R');
  WriteData('H');
  MoveCursor(702);
  WriteCommand(MWRITE);
  WriteData('3');
  WriteData('5');
  MoveCursor(742);
  WriteCommand(MWRITE);
  WriteData('$');
  WriteData('$');
  MoveCursor(782);
  WriteCommand(MWRITE);
  WriteData('=');
  WriteData('(');
  MoveCursor(822);
  WriteCommand(MWRITE);
  WriteData('D');
  WriteData('F');
  MoveCursor(862);
  WriteCommand(MWRITE);
  WriteData('4');
  WriteData('0');

}

/*


  //---------------------------------------------------------
  // --------------------- LCD START ------------------------
  //---------------------------------------------------------
  const int RS = 12;
  const int E = 11;
  const int D4 = 5;
  const int D5 = 4;
  const int D6 = 3;
  const int D7 = 2;

  bool bFourBitMode = false;
  char ReadSendState = -1;



  unsigned char Battery_0[8] =
  {
  0b00100,
  0b11111,
  0b10001,
  0b10001,
  0b10001,
  0b10001,
  0b10001,
  0b11111
  };

  void LcdSend(unsigned char Data)
  {

  digitalWrite(D0, (Data >> 0) & 0x01);
  digitalWrite(D1, (Data >> 1) & 0x01);
  digitalWrite(D2, (Data >> 2) & 0x01);
  digitalWrite(D3, (Data >> 3) & 0x01);
  digitalWrite(D4, (Data >> 4) & 0x01);
  digitalWrite(D5, (Data >> 5) & 0x01);
  digitalWrite(D6, (Data >> 6) & 0x01);
  digitalWrite(D7, (Data >> 7) & 0x01);

  delayMicroseconds(10);
  digitalWrite(E, HIGH);
  delayMicroseconds(10);
  digitalWrite(E, LOW);
  delayMicroseconds(100);
  }

  void LcdCommand(unsigned char Command)
  {
  if (ReadSendState != LOW)
  {
    ReadSendState = LOW;
    digitalWrite(RS, LOW);
  }

  LcdSend(Command);
  if (Command == 0x01) delayMicroseconds(2000);// Clear command takes more time
  }

  void LcdWrite(int Letter)
  {
  if (ReadSendState != HIGH)
  {
    ReadSendState = HIGH;
    digitalWrite(RS, HIGH);
  }

  LcdSend(Letter);
  }

  void LcdWrite(const char* Text)
  {
  if (ReadSendState != HIGH)
  {
    ReadSendState = HIGH;
    digitalWrite(RS, HIGH);
  }

  for (; *Text != 0; Text++)
  {
    char Letter = *Text;
    LcdSend(Letter);
  }
  }

  void LcdInit(bool bFirstInit)
  {
  if (bFirstInit)
  {
    // Give it time to power up
    delayMicroseconds(15000);

    pinMode(RS, OUTPUT);
    pinMode(E, OUTPUT);
    pinMode(D4, OUTPUT);
    pinMode(D5, OUTPUT);
    pinMode(D6, OUTPUT);
    pinMode(D7, OUTPUT);
  }

  // Start
  bFourBitMode = false;

  LcdCommand(0x03);

  delayMicroseconds(4000);

  LcdCommand(0x03);
  LcdCommand(0x03);
  LcdCommand(0x02);

  bFourBitMode = true;

  LcdCommand(0x28);
  LcdCommand(0x0C);
  LcdCommand(0x01);// Clear
  LcdCommand(0x06);

  LcdCreateChar(0, Battery_0);
  }

  void LcdSetCursor(unsigned char Column, unsigned char Row)
  {
  LcdCommand(0x80 | (Column + (Row != 0 ? 0x40 : 0x00)));
  }

  void LcdCreateChar(unsigned char Location, unsigned char SpecialChar[8])
  {
  LcdCommand(0x40 | (Location << 3));

  for (unsigned int i = 0; i < 8; i++)
    LcdWrite(SpecialChar[i]);
  }

  //---------------------------------------------------------
  // --------------------- LCD END --------------------------
  //---------------------------------------------------------

  void setup()
  {
  LcdInit(true);
  }

  void loop()
  {
  LcdInit(false);
  LcdSetCursor(0, 0);
  LcdWrite("print this");
  }
*/
